---
layout: post
title:  "winMain() 함수"
categories: win32
tags: [win32]
---
console에서 작동하는 Win32 어플리케이션에서 
```cpp
int WINAPI WinMain(HINSTANCE hInstance,
                   HINSTANCE hPrevInstance,
                   LPSTR lpCmdLine,
                   int nCmdShow
                   }
```
# `WINAPI`
함수를 호출할 때 인수는 어떻게 전달하는지, 스택 포인터는 누가 변경하는지 등의 규칙을 정해놓은 것을 호출 규약(calling convention)이라고 한다.
`__cdecl`, `__stdcall`, `__fastcall`등이 있다. `WinMain`에서의 `WINAPI` = `APIENTRY` = `__stdcall`이다.

`main()`(caller)에서 `func()`(callee)를 호출한다고 했을 때,
- 어셈블리 수준에서, `__stdcall`은 callee가 stack pointer를 원위치로 돌려놓는다. Windows API의 함수들은 이 방식을 사용한다.
- `__cdecl`은 반대로 caller가 callee의 `ret` 이후 stack pointer를 원위치로 돌려놓는다. 가변 인수 함수는 이 방법을 사용해야한다. callee가 stack pointer를 얼마나 돌려놔야하는지 미리 알 수 없기 때문이다. (호출되었을 때 알 수 있기 때문) 가장 많이 사용되는 호출 규약이다.
- `__fastcall`은 위의 두개와 다르게, 인수 일부를 레지스터를 통해서 전달한다. `__stdcall`과 `__cdecl`은 스택을 통해서 전달한다.


---
출처 : http://www.directxtutorial.com/Lesson.aspx?lessonid=11-1-2